<<<<<<< HEAD
pipeline {

  agent none

  stages{
      stage("build"){
        when{
            changeset "**/worker/**"
          }

        agent{
          docker{
            image 'maven:3.9.8-sapmachine-21'
            args '-v $HOME/.m2:/root/.m2'
          }
        }

        steps{
          echo 'Compiling worker app..'
          dir('worker'){
            sh 'mvn compile'
          }
        }
      }
      stage("test"){
        when{
          changeset "**/worker/**"
=======
pipeline { 
    agent {
      docker{
          image 'maven:3.9.8-sapmachine-21'
          args '-v $HOME/.m2:/root/.m2' 
      }
    }

    stages{ 
        stage('build'){
            steps{ 
                echo 'Compiling worker app' 
                dir('worker'){ 
                    sh 'mvn compile' 
                } 
            } 
        } 
        stage('test'){
            steps{ 
                echo 'Running unit tests on worker app..' 
                dir('worker'){ 
                    sh 'mvn clean test' 
                } 
            } 
        } 
        stage('package'){
            steps{ 
                echo 'packaging worker app into a jarfile'
                dir('worker'){ 
                    sh 'mvn package -DskipTests'
                    archiveArtifacts artifacts: '**/target/*.jar',
                    fingerprint: true 
                } 
            } 
        } 
        stage('docker-package'){
            agent any
            steps{
                echo 'Packaging worker app with docker'
                script{
                    docker.withRegistry('https://index.docker.io/v1/', 'dockerlogin') {
                        def workerImage = docker.build("nachodev666/worker:v${env.BUILD_ID}", "./worker")
                        workerImage.push()
                        workerImage.push("latest")
                    }
                }
            }
>>>>>>> f6aacefce693a84db4100b3b0869aa80de1d6e24
        }
        agent{
          docker{
            image 'maven:3.9.8-sapmachine-21'
            args '-v $HOME/.m2:/root/.m2'
          }
        }
        steps{
          echo 'Running Unit Tets on worker app..'
          dir('worker'){
            sh 'mvn clean test'
           }

          }
      }
      stage("package"){
        when{
          branch 'master'
          changeset "**/worker/**"
        }
        agent{
          docker{
            image 'maven:3.9.8-sapmachine-21'
            args '-v $HOME/.m2:/root/.m2'
          }
        }
        steps{
          echo 'Packaging worker app'
          dir('worker'){
            sh 'mvn package -DskipTests'
            archiveArtifacts artifacts: '**/target/*.jar', fingerprint: true
          }

        }
<<<<<<< HEAD
      }

      stage('docker-package'){
          agent any
          when{
            changeset "**/worker/**"
            branch 'master'
          }
          steps{
            echo 'Packaging worker app with docker'
            script{
              docker.withRegistry('https://index.docker.io/v1/', 'dockerlogin') {
                  def workerImage = docker.build("nachodev666/worker:v${env.BUILD_ID}", "./worker")
                  workerImage.push()
                  workerImage.push("${env.BRANCH_NAME}")
                  workerImage.push("latest")
              }
            }
          }
      }
  }

  post{
    always{
        echo 'Building multibranch pipeline for worker is completed..'
=======
        failure{
            slackSend (channel: "instavote", message: "Build Failed - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
        }
        success{
            slackSend (channel: "instavote", message: "Build Succeeded - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")     
        }
>>>>>>> f6aacefce693a84db4100b3b0869aa80de1d6e24
    }
  }
}

